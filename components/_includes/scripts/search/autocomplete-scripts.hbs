<script>
    function Autocomplete() {
        this.resultsList;
        this.resultItemTemplate;
        this.getResults;
        this.currentItem = -1;
        this.numberOfItems = 0;
        this.searchTimeoutId;
        this.searchTimeout = 500;
        this.query;
        this.searching = false;

        this.keyCodes = {
            RETURN: 13,
            ESC: 27,
            UP: 38,
            DOWN: 40,
        }
    }

    Autocomplete.prototype.init = function (getResultsFn) {
        this.resultsList = $('#autocomplete-results');
        this.resultItemTemplate = $.parseHTML($('#autocomplete-result-template').html());
        this.getResults = getResultsFn;

        $('#suggest-search-query').on('keydown keyup', this.inputKeyHandle.bind(this));
    }

    Autocomplete.prototype.show = function (results) {
        this.resultsList.html('');
        this.numberOfItems = results.length;
        this.currentItem = -1;

        for (var key in results) {
            var resultItem = $(this.resultItemTemplate).clone();
            var result = results[key];
            $('.autocomplete__result-link', resultItem)
                .html(result.title)
                .attr('href', result.url)
                .attr('id', 'result-item-' + key)
                .attr('aria-label', result.titleRaw || result.title)
                .mouseenter(this.itemMouseHandle.bind(this));

            if (result.class) {
                $('.autocomplete__result-link', resultItem).addClass(result.class);
            }
            this.resultsList.append(resultItem);
        }

        this.searching = false;
    }

    Autocomplete.prototype.selectItem = function () {
        $('.autocomplete__result-link', this.resultsList).removeClass('active').attr('aria-selected', 'false');

        if (this.currentItem < 0) {
            return;
        }
        var selectedItem = $('.autocomplete__result-item', this.resultsList)[this.currentItem];
        $('.autocomplete__result-link', selectedItem).addClass('active').attr('aria-selected', 'true');
        $('#suggest-search-query').attr('aria-activedescendant', 'result-item-' + this.currentItem);
    }

    Autocomplete.prototype.itemMouseHandle = function (event) {
        var id = event.target.id.replace('result-item-', '');
        this.currentItem = parseInt(id);
        this.selectItem();
    }

    Autocomplete.prototype.inputKeyHandle = function (event) {
        var key = event.which || event.keyCode;
        switch (key) {
            case this.keyCodes.DOWN:
                if (event.type === 'keyup') {
                    break;
                }
                if (this.currentItem < this.numberOfItems - 1) {
                    this.currentItem++;
                    this.selectItem();
                    event.preventDefault();
                }
                break;
            case this.keyCodes.UP:
                if (event.type === 'keyup') {
                    break;
                }
                if (this.currentItem >= 0) {
                    this.currentItem--;
                    this.selectItem();
                    event.preventDefault();
                }
                break;
            case this.keyCodes.RETURN:
                if (this.currentItem < 0) {
                    break;
                }
                var link = $('#result-item-' + this.currentItem, this.resultsList).attr('href');
                window.location = link;
                event.preventDefault();
                break;
            case this.keyCodes.ESC:
                this.show([]);
                event.preventDefault();
                break;
            default:
                this.query = event.target.value;
                if (this.searching) {
                    break;
                }
                if (this.searchTimeoutId) {
                    clearTimeout(this.searchTimeoutId);
                }
                this.searchTimeoutId = setTimeout(this.search.bind(this), this.searchTimeout);
        }
    }

    Autocomplete.prototype.search = function () {
        this.searching = true;
        this.getResults(this.query, this.show.bind(this));
    }
</script>
